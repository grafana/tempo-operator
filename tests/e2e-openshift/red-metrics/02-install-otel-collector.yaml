apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
spec:
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.91.0
  mode: deployment
  ports:
    - name: promexporter
      port: 8889
      protocol: TCP
  config: |
    connectors:
      spanmetrics:
        histogram:
          explicit:
            buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
        dimensions:
        - name: http.method
          default: GET
        - name: http.status_code
        dimensions_cache_size: 1000
        aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"    
        metrics_flush_interval: 5s

    receivers:
      otlp:
        protocols:
          grpc:
          http:
    
    exporters:
      prometheus:
        add_metric_suffixes: false
        endpoint: 0.0.0.0:8889
        resource_to_telemetry_conversion: 
          enabled: true # by default resource attributes are dropped
      logging:
      otlp:
        endpoint: tempo-redmetrics-distributor:4317
        tls:
          insecure: true
    
    service:
      # Expose internal telemetry of the collector
      # It exposes Prometheus /metrics endpoint for internal telemetry
      telemetry:
        metrics:
          address: 0.0.0.0:8888
      pipelines:
        traces:
          receivers: [otlp]
          exporters: [otlp, spanmetrics]
        metrics:
          receivers: [spanmetrics]
          exporters: [prometheus, logging]
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: otel-collector
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: otel-collector
  podMetricsEndpoints:
    - port: metrics
    - port: promexporter
      relabelings:
        - action: labeldrop
          regex: pod
        - action: labeldrop
          regex: container
        - action: labeldrop
          regex: endpoint
      metricRelabelings:
        - action: labeldrop
          regex: instance
        - action: labeldrop
          regex: job
