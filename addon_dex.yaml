apiVersion: v1
kind: Namespace
metadata:
  name: dex
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dex-config
  namespace: dex
data:
  dex.yaml: |-
    issuer: http://dex.dex.svc.cluster.local:30556/dex
    storage:
      type: sqlite3
      config:
        file: /tmp/dex.db
    web:
      http: 0.0.0.0:5556
    telemetry:
      http: 0.0.0.0:5558
    logger:
      level: "debug"
    oauth2:
      passwordConnector: local
    staticClients:
      - id: test
        name: test
        secret: ZXhhbXBsZS1hcHAtc2VjcmV0
        redirectURIs:
          - http://localhost:8050/oidc/test-oidc/callback
    enablePasswordDB: true
    staticPasswords:
      - email: "admin@example.com"
        # bcrypt hash of the string "password"
        hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
        username: "admin"
        userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dex
    spec:
      containers:
        - args:
            - dex
            - serve
            - /data/dex/dex.yaml
          image: dexidp/dex:v2.30.0
          imagePullPolicy: IfNotPresent
          name: hydra
          env:
          ports:
            - containerPort: 5556
              name: public
          resources: {}
          volumeMounts:
            - mountPath: /data/dex/
              name: dex-config
              readOnly: true
      volumes:
        - configMap:
            name: dex-config
          name: dex-config
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: dex
spec:
  type: NodePort
  ports:
    - name: public
      port: 30556
      protocol: TCP
      targetPort: public
      nodePort: 30556
  selector:
    app: dex
